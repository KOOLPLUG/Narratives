# -*- coding: utf-8 -*-
"""NarrAItives.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kZ8LyTHhebkXHORACgKKPOol0Sd-Rl1F
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install streamlit torch newspaper3k beautifulsoup4 lxml requests lxml_html_clean

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# 
# import streamlit as st
# import os
# from newspaper import Article
# import matplotlib.pyplot as plt
# import pandas as pd
# 
# # Removed Hugging Face model and API code
# 
# # Function to fetch article text (remains the same)
# def fetch_article_text(url):
#     """Fetches article and returns the text."""
#     try:
#         article = Article(url)
#         article.download()
#         article.parse()
#         text = article.text.strip()
#         return {"text": text}
#     except Exception as e:
#         return {"error": f"Error fetching article: {e}"}
# 
# def main():
#     st.sidebar.title("Navigation")
#     page = st.sidebar.radio("Go to", ["Home", "Article Text Viewer", "Popular Rhetoric Timeline", "About"])
# 
#     st.title("NarrAItives")
# 
#     if page == "Home":
#         home_page()
#     elif page == "Article Text Viewer": # Renamed page
#         article_text_viewer_page()
#     elif page == "Popular Rhetoric Timeline":
#         popular_rhetoric_timeline_page()
#     elif page == "About":
#         about_page()
# 
# def home_page():
#     st.header("uncover the patterns shaping your world")
#     st.write("Welcome to NarrAItives! This application helps you analyze news articles.")
#     st.write("Currently, the rhetoric analysis feature is disabled. You can view the article text using the 'Article Text Viewer'.")
#     st.write("Use the navigation on the left to explore different features of the app.")
#     # Add any other content for the home page here
# 
# def article_text_viewer_page(): # New page for just viewing text
#     st.header("view article text")
#     st.write("Enter the URL of a news article to view its extracted text.")
# 
#     url = st.text_input("Enter the URL of a news article:")
# 
#     if url:
#         with st.spinner("Fetching article text..."):
#             article_data = fetch_article_text(url)
# 
#         if "error" in article_data:
#             st.error(article_data["error"])
#         else:
#             st.subheader("Article Text:")
#             st.text_area("Article Content", article_data["text"], height=500)
# 
# def popular_rhetoric_timeline_page():
#     st.header("the story behind the story")
#     st.write("Explore the trends of popular rhetoric over time.")
#     st.warning("This feature is not yet implemented.")
#     # Add the timeline visualization here
# 
# def about_page():
#     st.header("The media tells stories. We tell you why.")
#     st.write("Learn more about the NarrAItives project and the team behind it.")
#     # Add information about the project here
# 
# if __name__ == "__main__":
#     main()